/*
 * Panelek létrehozása
 */
package hhqcs.form.comco;

import hhqcs.HHQCS;
import hhqcs.HHQCSServer;
import java.awt.Color;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author Gabesz
 */
public class JpanelForm extends javax.swing.JPanel {

    @SuppressWarnings("FieldMayBeFinal")
    private HHQCSServer server;

    /**
     * Creates new form JpanelForm
     *
     * @param server
     */
    @SuppressWarnings("CallToThreadStartDuringObjectConstruction")
    public JpanelForm(HHQCSServer server) {
        this.server = server;
        /*
         * A panelek ütemezet frissitése
         */
        
        Thread timer = new Thread("Machine Check Timer(" + this.server.setup.PLANTNAME + ")") {
            @Override
            @SuppressWarnings({"BroadCatchBlock", "TooBroadCatch"})
            public void run() {
                while (true) {
                    try {
                        synchronized (this) {
                            wait(100);
                            refreshPanel();
                        }
                    } catch (Exception ex) {

                    }
                }
            }
        };
        timer.start();
        //HHQCS.threads.add(timer);
        initComponents();
    }

    private void refreshPanel() {
        try {
            jLabel1.setText(this.server.setup.PLANTNAME);
            jTextField1.setText(Integer.toString(this.server.tcpLife.ls.count));
            if (this.server.tcpLife.hhqcsServer.centralografMessage.plantStatus == 0) {
                jTextField1.setForeground(Color.BLUE);
            } else if (this.server.tcpLife.hhqcsServer.centralografMessage.plantStatus == 1) {
                jTextField1.setForeground(new java.awt.Color(10,102, 0));
            } else {
                jTextField1.setForeground(Color.RED);
            }

        } catch (Exception ex) {
            System.out.println("A panel frissitése közben hibatörtént(" + JpanelForm.class.getSimpleName() + ")" + ex.getMessage());
            HHQCS.debug.printDebugMsg(null, JpanelForm.class.getName(),
                    "A panel frissitése közben hibatörtént", ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 228, 21));
        setFocusable(false);
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(280, 38));
        setRequestFocusEnabled(false);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0, .3f));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText(this.server.setup.PLANTNAME);
        jLabel1.setFocusable(false);
        jLabel1.setRequestFocusEnabled(false);
        jLabel1.setVerifyInputWhenFocusTarget(false);

        jTextField1.setBackground(new java.awt.Color(0, 0, 0, .3f));
        jTextField1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(0, 0, 255));
        jTextField1.setText(this.server.setup.PLANTNAME);
        jTextField1.setFocusable(false);
        jTextField1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jTextField1.setMaximumSize(new java.awt.Dimension(60, 24));
        jTextField1.setMinimumSize(new java.awt.Dimension(60, 24));
        jTextField1.setPreferredSize(new java.awt.Dimension(60, 24));
        jTextField1.setRequestFocusEnabled(false);
        jTextField1.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jTextField1;
    // End of variables declaration//GEN-END:variables
}
